{"version":3,"file":"bundle.js","sources":["bundle.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\nexports.__esModule = true;\nexports.MakeRequest = void 0;\nfunction getPercent(fraction, whole) {\n    return (fraction / whole * 100).toFixed(2);\n}\nfunction MakeRequest(steamId, includeFreeGames, callback, errorCallback) {\n    var requestUrl = \"./php/getgamelist.php?steamid=\" + steamId;\n    if (includeFreeGames) {\n        requestUrl += \"&includefreegames=on\";\n    }\n    // Make request\n    fetch(requestUrl)\n        .then(function (response) { return response.json(); })\n        .then(function (jsonData) {\n        console.log(jsonData);\n        if (!jsonData.response) {\n            errorCallback(jsonData.error);\n            return;\n        }\n        if (Object.keys(jsonData.response).length == 0) {\n            errorCallback(\"Empty response; make sure user's privacy settings allow looking at their games.\");\n            return;\n        }\n        var newJsonData = jsonData.response;\n        // console.log(newJsonData);\n        ProcessResponse(newJsonData);\n        callback(newJsonData);\n    });\n}\nexports.MakeRequest = MakeRequest;\nfunction ProcessResponse(jsonData) {\n    jsonData.games_60_plus = { games: [], num: 0, percent: \"\" };\n    jsonData.games_60_minus = { games: [], num: 0, percent: \"\" };\n    jsonData.games_zero = { games: [], num: 0, percent: \"\" };\n    // Sort based on (reverse) playtime first, then name\n    jsonData.games.sort(function (gameA, gameB) {\n        return gameA.playtime_forever == gameB.playtime_forever ?\n            gameA.name.localeCompare(gameB.name) :\n            gameB.playtime_forever - gameA.playtime_forever;\n    });\n    jsonData.games.forEach(function (game) {\n        // Categorize based on playtime\n        if (game.playtime_forever == 0) {\n            jsonData.games_zero.games.push(game);\n        }\n        else if (game.playtime_forever < 60) {\n            jsonData.games_60_minus.games.push(game);\n        }\n        else {\n            // Time conversion to natural language (XXhYYm)\n            var hours = Math.floor(game.playtime_forever / 60);\n            var minutes = game.playtime_forever % 60;\n            game.playtime_natural_language = hours + \"h\" + minutes + \"m\";\n            jsonData.games_60_plus.games.push(game);\n        }\n    });\n    jsonData.stats = {\n        total_number_of_games: jsonData.game_count,\n        total_number_of_minutes_played: 0\n    };\n    calculateStat(jsonData.games_60_plus, jsonData.game_count);\n    calculateStat(jsonData.games_60_minus, jsonData.game_count);\n    calculateStat(jsonData.games_zero, jsonData.game_count);\n}\nfunction calculateStat(gameCollection, gameCount) {\n    gameCollection.num = gameCollection.games.length;\n    gameCollection.percent = getPercent(gameCollection.games.length, gameCount);\n}\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\nexports.__esModule = true;\nexports.setup = void 0;\nvar SteamHour = require(\"./SteamHour\");\nfunction setup() {\n    var form = document.querySelector(\"form.steamid\");\n    var url = new URL(window.location.toString());\n    var steamId = url.searchParams.get(\"steamid\");\n    var includeFreeGames = url.searchParams.get(\"includefreegames\") == null ? false : true;\n    if (steamId != null && steamId.length > 0) {\n        makeRequest(steamId, includeFreeGames, displayResults, displayError);\n    }\n    updateForm(form, steamId, includeFreeGames);\n    setupFormInteractivity(form);\n}\nexports.setup = setup;\nfunction updateForm(form, steamId, includeFreeGames) {\n    if (steamId != null || includeFreeGames) {\n        var inputBox = form.querySelector(\"input[name=steamid]\");\n        inputBox.value = steamId;\n        var freeGamesCheckbox = form.querySelector(\"input[name=includefreegames]\");\n        freeGamesCheckbox.checked = includeFreeGames;\n    }\n}\nfunction setupFormInteractivity(form) {\n    form.addEventListener(\"submit\", function (event) {\n        event.preventDefault();\n        var formData = new FormData(event.target);\n        var steamId = formData.get(\"steamid\");\n        var includeFreeGames = formData.get(\"includefreegames\") === \"on\";\n        makeRequest(steamId, includeFreeGames, displayResults, displayError);\n        var url = new URL(window.location.toString());\n        url.searchParams.set(\"steamid\", steamId);\n        url.searchParams[\"delete\"](\"includefreegames\");\n        if (includeFreeGames) {\n            url.searchParams.append(\"includefreegames\", \"on\");\n        }\n        window.history.pushState(null, null, url.toString());\n    });\n}\nfunction makeRequest(steamId, includeFreeGames, callback, errorCallback) {\n    clearResults();\n    SteamHour.MakeRequest(steamId, includeFreeGames, displayResults, displayError);\n}\nfunction displayResults(jsonData) {\n    updateOverallStats(jsonData);\n    var column60Plus = makeColumn(\"60+ minutes\", jsonData.games_60_plus);\n    var column60Minus = makeColumn(\"1–59 minutes\", jsonData.games_60_minus);\n    var columnZero = makeColumn(\"0 minutes\", jsonData.games_zero);\n    document.querySelector(\"section.games\").appendChild(column60Plus);\n    document.querySelector(\"section.games\").appendChild(column60Minus);\n    document.querySelector(\"section.games\").appendChild(columnZero);\n    document.querySelector(\"section.summary\").classList.add(\"active\");\n}\nfunction displayError(error) {\n    document.querySelector(\"section.error p\").textContent = error;\n    document.querySelector(\"section.error\").classList.add(\"active\");\n}\nfunction clearResults() {\n    document.querySelector(\"section.games\").innerHTML = \"\";\n    document.querySelector(\"section.summary\").classList.remove(\"active\");\n    document.querySelector(\"section.error\").classList.remove(\"active\");\n}\nfunction updateOverallStats(jsonData) {\n    document.querySelector(\"section.summary span.games_num\")\n        .textContent = jsonData.stats.total_number_of_games.toString();\n    document.querySelector(\"section.summary span.total_minutes\")\n        .textContent = jsonData.stats.total_number_of_minutes_played.toString();\n    updateSingleOverallStat(\"sixtyplus\", jsonData.games_60_plus);\n    updateSingleOverallStat(\"lessthansixty\", jsonData.games_60_minus);\n    updateSingleOverallStat(\"zerominutes\", jsonData.games_zero);\n}\nfunction updateSingleOverallStat(baseSelector, gameCollection) {\n    document.querySelector(\"section.summary span.\" + baseSelector + \".num\")\n        .textContent = gameCollection.num.toString();\n    document.querySelector(\"section.summary span.\" + baseSelector + \".percent\")\n        .textContent = gameCollection.percent;\n}\nfunction makeColumn(headerText, gameCollection) {\n    var columnTemplate = document.querySelector(\"template.column\");\n    var column = document.importNode(columnTemplate, true).content;\n    column.querySelector(\"h2\").textContent = headerText;\n    column.querySelector(\"span.num\").textContent = gameCollection.num.toString();\n    column.querySelector(\"span.percent\").textContent = gameCollection.percent;\n    var gamelistContainer = column.querySelector(\"section.gamelist\");\n    // Create element for each game\n    gameCollection.games.forEach(function (gameData) {\n        var gameElement = makeGameElement(gameData);\n        gamelistContainer.appendChild(gameElement);\n    });\n    return column;\n}\nfunction makeGameElement(game) {\n    console.log(game);\n    var gameElementTemplate = document.querySelector(\"template.game\");\n    var gameElement = document.importNode(gameElementTemplate, true).content;\n    gameElement.querySelector(\"h3\").textContent = game.name;\n    gameElement.querySelector(\"img.gameicon\").setAttribute(\"src\", \"http://media.steampowered.com/steamcommunity/public/images/apps/\" + game.appid + \"/\" + game.img_icon_url + \".jpg\");\n    var gametimeElement = gameElement.querySelector(\".gametime\");\n    var gametimeHrsElement = gameElement.querySelector(\".gametime_hrs\");\n    if (game.playtime_forever > 0) {\n        gametimeElement.textContent = game.playtime_forever.toString() + \" minutes\";\n    }\n    else {\n        gametimeElement.remove();\n    }\n    if (game.playtime_forever >= 60) {\n        gametimeHrsElement.textContent = game.playtime_natural_language;\n    }\n    else {\n        gametimeHrsElement.remove();\n    }\n    return gameElement;\n}\n// Function for setting the game list of a column – used initially & by sorters\n// Clears the old content, reads the list, sorts it according to what's wanted, generates html\n\n},{\"./SteamHour\":1}],3:[function(require,module,exports){\n\"use strict\";\nexports.__esModule = true;\nvar SteamHourUI = require(\"./SteamHourUI\");\nSteamHourUI.setup();\n\n},{\"./SteamHourUI\":2}]},{},[3]);\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","calculateStat","gameCollection","gameCount","num","games","percent","toFixed","__esModule","MakeRequest","steamId","includeFreeGames","callback","errorCallback","requestUrl","fetch","then","response","json","jsonData","newJsonData","console","log","Object","keys","games_60_plus","games_60_minus","games_zero","sort","gameA","gameB","playtime_forever","name","localeCompare","forEach","game","hours","minutes","push","Math","floor","playtime_natural_language","stats","total_number_of_games","game_count","total_number_of_minutes_played","error","2","setup","SteamHour","makeRequest","document","querySelector","innerHTML","classList","remove","displayResults","displayError","textContent","toString","updateSingleOverallStat","column60Plus","makeColumn","column60Minus","columnZero","appendChild","add","baseSelector","headerText","columnTemplate","column","importNode","content","gamelistContainer","gameData","gameElement","gameElementTemplate","setAttribute","appid","img_icon_url","gametimeElement","gametimeHrsElement","makeGameElement","url","form","URL","window","location","searchParams","get","value","checked","addEventListener","event","preventDefault","formData","FormData","target","set","append","history","pushState","./SteamHour","3","./SteamHourUI"],"mappings":"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"}